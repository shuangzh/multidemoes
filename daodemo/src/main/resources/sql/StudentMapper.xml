<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sql.StudentMapper">
    <resultMap type="Student" id="StudentResult">
        <id property="studId" column="stud_id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="dob" column="dob"/>
        <result property="phone" column="phone"/>
    </resultMap>

    <select id="selectStudentById" parameterType="int" resultMap="StudentResult">
        SELECT STUD_ID, NAME, EMAIL, DOB, PHONE
        FROM STUDENTS WHERE STUD_ID=#{Id}
    </select>

    <select id="selectStudentByName" parameterType="String" resultMap="StudentResult">
        SELECT STUD_ID, NAME, EMAIL, DOB, PHONE
        FROM STUDENTS WHERE NAME=#{name}
    </select>

    <select id="getAllStudents" resultMap="StudentResult">
        SELECT STUD_ID, NAME, EMAIL, DOB, PHONE
        FROM STUDENTS ORDER BY STUD_ID
    </select>

    <update id="updateStudent" parameterType="Map">
        UPDATE STUDENTS
        <set>
            <if test="name !=null">name=#{name},</if>
            <if test="email !=null">email=#{email},</if>
            <if test="phone !=null">phone=#{phone},</if>
            <if test="dob !=null">dob = #{dob},</if>
        </set>
        <choose>
            <when test="studId !=null">
                WHERE stud_id = #{studId}
            </when>
            <when test="studIds !=null">
                WHERE stud_id IN
                <foreach collection="studIds" item="studId" open="(" separator="," close=")">
                    #{studId}
                </foreach>
            </when>
            <when test="name !=null">
                WHERE name = #{name}
            </when>
            <when test="names !=null">
                WHERE name IN
                <foreach collection="names" item="name" open="(" separator="," close=")">
                    #{name}
                </foreach>
            </when>
        </choose>
    </update>

    <delete id="deleteStudent" parameterType="Map">
        DELETE FROM students
        <choose>
            <when test="studId !=null">
                WHERE stud_id = #{studId}
            </when>
            <when test="name !=null">
                WHERE name = #{name}
            </when>
            <when test="studIds !=null">
                WHERE stud_id IN
                <foreach collection="studIds" item="studId" open="(" separator="," close=")">
                    #{studId}
                </foreach>
            </when>
            <when test="names !=null">
                WHERE stud_id IN
                <foreach collection="names" item="name" open="(" separator="," close=")">
                    #{name}
                </foreach>
            </when>
        </choose>
    </delete>

    <resultMap id="StudentWithAddressResult" type="Student" extends="StudentResult">
        <result property="address.addrId" column="addr_id"/>
        <result property="address.street" column="street"/>
        <result property="address.city" column="city"/>
        <result property="address.state" column="state"/>
        <result property="address.zip" column="zip"/>
        <result property="address.country" column="country"/>
    </resultMap>

    <select id="selectStudentWithAddress" parameterType="Map" resultMap="StudentWithAddressResult">
        select s.stud_id,
        s.name,
        s.email,
        s.dob,
        s.phone,
        a.addr_id,
        a.city,
        a.country,
        a.state,
        a.street,
        a.zip
        from students s
        left join addresses a
        on s.addr_id = a.addr_id
        <choose>
            <when test="studId !=null">
                where s.stud_id = #{studId}
            </when>
            <when test="studIds !=null">
                WHERE s.stud_id IN
                <foreach collection="studIds" item="studId" open="(" separator="," close=")">
                    #{studId}
                </foreach>
            </when>
            <when test="name !=null">
                WHERE s.name = #{name}
            </when>
            <when test="names !=null">
                WHERE s.name IN
                <foreach collection="names" item="name" open="(" separator="," close=")">
                    #{name}
                </foreach>
            </when>
        </choose>
    </select>

    <insert id="insertStudent" parameterType="Student">
        <selectKey keyProperty="studId" resultType="int" order="BEFORE">
            SELECT SEQ_STUID.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO STUDENTS(STUD_ID,NAME,EMAIL,DOB, PHONE, ADDR_ID)
        VALUES(#{studId },#{name,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{dob,jdbcType=DATE}, #{phone,jdbcType=VARCHAR}, #{address.addrId,jdbcType=INTEGER})
    </insert>


    <!--

    <resultMap id="StudentWithAddressResult" type="Student" extends="StudentResult">
        <result property="address.addrId" column="addr_id" />
        <result property="address.street" column="street" />
        <result property="address.city" column="city"/>
        <result property="address.zip" column="zip"/>
        <result property="address.country" column="country"/>
        <result property="address.state" column="state"/>
    </resultMap>

    <resultMap id="AddressResult" type="Address">
        <id property="addrId" column="addr_id"/>
        <result property="street" column="street"/>
        <result property="city" column="city"/>
        <result property="state" column="state"/>
        <result property="zip" column="zip"/>
        <result property="country" column="country"/>
    </resultMap>

    <resultMap id="StudentWithAddressResult1" type="Student">
        <id property="studId" column="stud_id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <association property="address" resultMap="AddressResult"/>
    </resultMap>


    <resultMap id="StudentWithAddressResult2" type="Student">
        <id property="studId" column="stud_id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <association property="address" column="addr_id" select="findAddressById"/>
    </resultMap>

    <resultMap id="CourseResult" type="Course" >
        <id property="courseId" column="course_id"/>
        <result property="name" column="name"/>
        <result property="description" column="description" />
        <result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
        <result property="tutorId" column="tutor_id"/>
    </resultMap>

    <resultMap id="CourseWithTutorResult" type="Course" extends="CourseResult">
        <result property="tutor.name" column="tutor_name"/>
        <result property="tutor.tutorId" column="tutor_id"/>
        <result property="tutor.email" column="tutor_email"/>
    </resultMap>


    <resultMap id="TutorResult" type="Tutor" >
        <id property="tutorId" column="tutor_id"/>
        <result property="name" column="tutor_name"/>
        <result property="email" column="email"/>
        <collection property="courses" resultMap="CourseResult"/>
    </resultMap>


    <resultMap id="TutorResult1" type="Tutor" >
        <id property="tutorId" column="tutor_id"/>
        <result property="name" column="tutor_name"/>
        <result property="email" column="email"/>
        <collection property="courses" column="tutor_id" select="findCoursesByTutor"/>
    </resultMap>

    <select id="findAllCourses" resultMap="CourseWithTutorResult">
        select c.course_id, c.name, c.description, c.start_date, c.end_date, c.tutor_id,
        t.name as tutor_name , t.email as tutor_email
        from courses c  left join tutors t on c.tutor_id = t.tutor_id
    </select>


    <select id="findAllStudents" resultMap="StudentResult">
        SELECT * FROM STUDENTS
    </select>
    <select id="findStudentById" parameterType="int" resultType="Student">
        SELECT STUD_ID AS STUID, NAME, EMAIL, DOB, PHONE
        FROM STUDENTS WHERE STUD_ID=#{Id}
    </select>
    <insert id="insertStudent" parameterType="Student">
        <selectKey keyProperty="studId" resultType="int" order="BEFORE">
            SELECT SEQ_STUID.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO STUDENTS(STUD_ID,NAME,EMAIL,DOB, PHONE)
        VALUES(#{studId },#{name},#{email},#{dob}, #{phone})
    </insert>

    <select id="selectStudentWithAddress" parameterType="int" resultMap="StudentWithAddressResult">
        SELECT stud_id, name, email, phone, a.addr_id, street, city, state, zip, country
        FROM students s LEFT OUTER  JOIN addresses a on s.addr_id = a.addr_id
        WHERE  stud_id = #{studID}
    </select>

    <select id="selectStudentWithAddress1" parameterType="int" resultMap="StudentWithAddressResult1">
        SELECT stud_id, name, email, phone, a.addr_id, street, city, state, zip, country
        FROM students s LEFT OUTER  JOIN addresses a on s.addr_id = a.addr_id
        WHERE  stud_id = #{studID}
    </select>

    <select id="findAddressById" parameterType="int"  resultMap="AddressResult">
        SELECT addr_id, street, city, state, zip, country FROM Addresses
        WHERE  addr_id = #{addr_id}
    </select>

    <select id="selectStudentWithAddress2" parameterType="int" resultMap="StudentWithAddressResult2">
        SELECT * FROM students
        WHERE  stud_id = #{studID}
    </select>


    <select id="findTutorById" parameterType="int" resultMap="TutorResult">
        SELECT T.TUTOR_ID, T.NAME AS TUTOR_NAME, EMAIL, C.COURSE_ID,
        C.NAME, DESCRIPTION, START_DATE, END_DATE
        FROM TUTORS T LEFT OUTER JOIN ADDRESSES A ON T.ADDR_ID=A.ADDR_ID
        LEFT OUTER JOIN COURSES C ON T.TUTOR_ID=C.TUTOR_ID
        WHERE T.TUTOR_ID=#{tutorId}
    </select>

    <select id="findTutorById1" parameterType="int" resultMap="TutorResult1">
        SELECT T.TUTOR_ID, T.NAME AS TUTOR_NAME, EMAIL
        FROM TUTORS T
        WHERE T.TUTOR_ID=#{tutorId}
    </select>

    <select id="findCoursesByTutor" parameterType="int" resultMap="CourseResult">
        SELECT * FROM courses WHERE  tutor_id = #{tutorId}
    </select>

    <select id="searchCourses" parameterType="hashmap" resultMap="CourseResult">
        SELECT * FROM COURSES
        WHERE TUTOR_ID= #{tutorId}
        <if test="courseName != null">
            AND NAME LIKE #{courseName}
        </if>
        <if test="startDate != null">
            AND START_DATE &gt;= #{startDate}
        </if>
        <if test="endDate != null">
            AND END_DATE &lt;= #{endDate}
        </if>
    </select>

    <select id="searchCourses1" parameterType="hashmap" resultMap="CourseResult">
        SELECT * FROM COURSES
        <choose>
            <when test="searchBy == 'Tutor'">
                WHERE TUTOR_ID= #{tutorId}
            </when>
            <when test="searchBy == 'CourseName'">
                WHERE name like #{courseName}
            </when>
            <otherwise>
                WHERE TUTOR start_date  &gt;= now()
            </otherwise>
        </choose>
    </select>

    <select id="selectStudentByName" parameterType="String" resultMap="StudentResult">
        SELECT  * FROM students where name = #{name}
    </select>


    <select id="searchCourses2" parameterType="hashmap"
            resultMap="CourseResult">
        SELECT * FROM COURSES
        <where>
            <if test=" tutorId != null ">
                TUTOR_ID= #{tutorId}
            </if>
            <if test="courseName != null">
                AND name like #{courseName}
            </if>
            <if test="startDate != null">
                AND start_date &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND end_date  &lt;= #{endDate}
            </if>
        </where>
    </select>

    <update id="updateStudent" parameterType="Student" >
        UPDATE STUDENTS
        <set>
            <if test="name !=null" >name=#{name},</if>
            <if test="email !=null">email=#{email},</if>
            <if test="phone !=null">phone=#{phone},</if>
            <if test="dob !=null">dob = #{dob},</if>
        </set>
        WHERE  stud_id = #{studId}
    </update>

    -->

</mapper>
